//---------------------------------------------------------------------------------------
#ifndef SOCKET_CONTAINER_HPP
#define SOCKET_CONTAINER_HPP
//---------------------------------------------------------------------------------------
#include <vector>
#include <memory>
//---------------------------------------------------------------------------------------
namespace server
{
namespace detail
{
//---------------------------------------------------------------------------------------
template<typename Socket>
class SocketContainer
{
  using SocketPtr = std::unique_ptr<Socket>;

public:

  void pushClient(SocketPtr newClient);

  template<typename ... Args>
  void emplaceClient(Args && ... args);

private:

  std::vector<SocketPtr> sockets_;
};
//---------------------------------------------------------------------------------------
} //detail
//---------------------------------------------------------------------------------------

//---------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------
// IMPLEMENTATION
//---------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------
template<typename Socket>
void detail::SocketContainer<Socket>::pushClient(SocketPtr newClient)
{
  sockets_.push_back(std::move(newClient));
}
//---------------------------------------------------------------------------------------
template<typename Socket>
template<typename ... Args>
void detail::SocketContainer<Socket>::emplaceClient(Args && ... args)
{
  sockets_.emplace_back(std::forward<Args>(args)...);
}
//---------------------------------------------------------------------------------------
} //server
//---------------------------------------------------------------------------------------
#endif // SOCKET_CONTAINER_HPP
//---------------------------------------------------------------------------------------
